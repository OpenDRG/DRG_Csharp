namespace drg_group.beijing_2022
{
    public class MDCR
    {
        public static String group(MedicalRecord record){
            String[] mdc_zd={"C92.000x018","C90.000x038","C85.900x013","C95.000x115","Z51.002","C85.900x038","D47.100x018","C90.000x024","Z51.800x951","C96.603","C95.000x101","C88.700x003","C83.801","C95.000x116","C85.100x021","C88.700x002","C90.000x004","C95.900x015","C85.100","C83.301","D47.000","C85.900x019","Z51.807","C88.400","C82.100","C85.901","D48.901","C90.000x008+M90.6*","C88.302","Z51.809","C92.501","C95.000x117","Z51.806","C81.300","C77.300x001","C92.100x018","D47.703","Z51.800x983","C83.300x009","C91.500x011","C86.600","C88.202","C88.200x011","C92.100x012","C84.405","C84.500","D47.900x002","C76.700x002","C82.500","Z08.800x003","C96.004","C92.703","C90.000x032","D46.201x001","C76.801","D46.700x003","C83.300x006","C85.900x030","C77.200","C93.001","Z09.200","C96.602","C85.900x037","D09.700x001","C92.601","C91.001","C94.600","D46.900x006","C92.100x016","C90.200","C93.103","C88.700","C90.000x028","C79.800x811","C83.802","D46.700","C85.900x002","D46.700x007","C79.826","C77.501","C91.000x015","C93.900","C96.600","C82.903","C94.202","C84.100","D36.700x011","C77.205","C78.605","C92.000x014","C76.305","C77.202","C80.901","C96.400x002","C79.800x862","C85.200","C84.700","D19.700","C85.900x008","C94.702","C95.900","C97.x00","D45.x00","Z51.001","C92.000x015","C93.700","C83.800x009","C92.700","C90.000x029","C84.000x002","C86.000","C86.601","C81.702","C46.700","C92.800","C91.000x009","C93.101","C85.900x026","D47.403","D89.801","C79.900x001","D46.700x006","D36.710","C82.300","C84.600","C83.002","C93.000x011","C96.704","C83.300x008","C92.400x011","D19.900x001","C88.200x012","C92.300x001","C85.900x011","C95.700x001","C85.900x020","C90.000x031","Z51.800x922","C84.900","Z51.000x003","D47.700x005","C92.900","C82.701","C95.900x005","C80.000x001","C92.100x014","C96.200x005","C85.704","C88.402","C46.900","D46.901","C83.502","C83.307","Z54.001","D47.001","D47.100x009","C96.000","C86.100","D46.100x002","C95.000x017","C91.003","C95.002","C96.400","C96.400x004","C91.300","C91.000","C80.903","C92.008","Z51.000x013","C90.000x005","C92.701","C77.900","C96.801","C91.500","C82.000","C85.900x039","C88.701","C76.800","C83.101","C92.600","C92.901","C83.302","C94.400","D47.700x007","C91.400","D46.200","C92.706","Z51.808","D47.701","C93.000x016","C95.700x002","C81.700","C77.500","C88.401","C92.102","C88.900","C48.102","C90.100","Z51.800x924","C92.002","C95.700x011","C92.000x011","C83.501","C92.005","C46.900x004","D47.100x007","C90.000","C91.701","Z51.100x004","C77.107","Z51.800x097","C96.002","C90.000x014","C84.601","C76.300","C77.300x003","C82.704","C92.100x001","C77.301","C85.900x042","C81.400","C90.000x030","C77.303","Z08.800x001","C92.000","D48.707","C80.902","C93.701","Z51.000x012","C93.100","D46.700x001","C76.200x002","C85.900x036","D36.711","C91.100x011","C88.300","C77.400x001","D47.401","D46.900x004","D47.700x006","C90.000x041","D48.700x001","C86.500","C84.401","C86.400","C95.004","C95.100x011","Z51.500x003","C92.300x013","C85.900x004","C91.600","C84.402","Z51.200x008","C92.402","C85.900x003","Z51.003","C82.600","C92.100","C93.002","C94.703","C96.800","C83.900","C90.300","C90.000x026","C96.200x013","C84.000","C46.800","D48.700x023","C93.102","C88.203","C90.000x012","C90.300x004","C91.100","C90.200x009","C92.200x001","C90.000x036","D36.705","Z51.103","C83.305","C92.000x012","C78.604","C83.003","C84.500x016","C92.000x017","D47.900","C80.904","C95.000x016","C84.502","C94.700","C82.400","C91.000x007","C95.000x118","D47.100x004","D46.700x002","C96.400x001","C90.000x037","D46.100x012","C91.000x013","D47.404","C92.004","C83.703","C96.601","C85.900x017","C90.000x027","C94.200","C90.000x021","D48.900","C86.200","C82.200","C91.000x017","C92.103","C80.000","C94.001","C95.006","C88.000x012","C91.000x014","Z08.800x004","Z51.811","D47.100x017","C85.700x016","D48.708","C84.403","D47.002","C96.401","C79.800x816","C82.700","C83.300","Z51.804","C92.000x006","C84.000x003","C80.001","Z51.101","Z08.900","C85.100x010","C94.004","C77.800","C90.000x023","D46.900","C85.700","C84.800","C93.100x013","C91.400x013","Z51.800x952","Z51.800x953","C81.703","C96.202","C88.700x013","C77.300","C85.900x015","C80.900","C85.900x022","C90.000x033","Z51.500x002","C94.700x004","Z08.100","C95.000x102","C83.800x008","D47.200x004+G63.1*","C49.901","C95.900x012","C95.901","C85.900x005","C92.300x003","C94.300x011","C92.000x016","C92.100x004","Z51.805","C92.300","C86.602","C84.400x001","Z51.800x927","C83.100","D09.900","C85.900x031","C91.004","C83.304","C88.700x012","C96.201","C46.300","Z09.100","C85.900x034","C85.900x006","C84.400","C92.007","D47.300","D47.400","C96.501","C92.100x011","D48.700x015","D46.100","C85.900x025","C88.201","C88.200","C85.701","C85.900x010","D47.100x019","C85.900x040","D36.700x023","D47.200x003","C83.303","Z51.802","C94.200x011","C88.000x002","C83.306","D36.709","C92.001","C77.401","C95.000x018","Q85.909","C84.500x004","D47.100","D47.700","C96.700","C91.006","C83.500","C83.004","C76.700","D48.723","C85.705","C85.900x027","C82.703","D46.600","D09.700","C94.000x011","C85.700x004","C92.000x013","C96.400x003","C92.100x019","C90.000x035","C92.401","C85.900","C90.200x008","C95.000x002","C85.900x014","C85.900x029","C92.900x001","C46.900x002","Z08.200","C91.008","Z08.800x002","C79.811","Z51.500x001","C83.702","C83.800x006","C83.504","C76.306","C91.401","Z51.800x921","C92.700x013","C45.706","C77.206","C46.900x003","Z51.102","D36.700x028","D46.700x008","C83.300x007","C90.301","C90.200x013","D48.902","D36.700x025","D47.100x008","D46.400","C90.000x022","C96.604","C88.301","C83.102","C94.700x014","Z51.000x008","Z51.810","D36.700x012","C91.901","C94.400x001","C83.000","D47.402","C92.100x002","C77.502","C90.000x039","C90.100x002","D46.500","D47.500","C84.404","C90.000x040","C91.000x012","C92.300x011","C96.200","C76.302","C92.200","C95.100x012","C90.001","C83.803","C85.900x028","C81.900","C91.400x004","C96.705","C84.406","C85.707","C90.300x001","C93.104","C95.000","C92.403","C92.000x003","D46.203","C77.900x001","C96.403","C84.500x012","C93.300","D47.200","C90.002","C90.300x002","C91.704","C93.100x011","C81.200","C95.000x015","C86.603","C88.000x011","D47.702","C93.100x012","C91.100x012","D48.715","C82.901","C94.201","C95.900x003+M36.1*","C92.006","C90.000x025","D48.716","C85.715","C90.300x003","D47.101","C90.303","C94.000x001","C79.800x837","C90.000x011","Q85.802","Z51.800x095","Z51.800x925","C90.302","C85.900x001","C79.800x818","C92.700x006","C91.102","C95.003","D36.704","C79.800x804","C92.009","C92.100x017","C93.003","D46.001","Z08.000","C96.502","C83.503","C84.407","D47.900x001","C85.900x024","C97.x01","C83.700","C88.403","Z51.800x092","C90.000x034","D48.725","Z51.104","C95.900x013+M36.1*","C90.100x011","C92.200x011","C85.709","C77.503","C94.300","C48.101","D47.003","C81.701","C92.502","C81.100","D47.004","C85.900x009","C95.005","C76.101","C85.900x043","C90.000x009","Z51.800x094","C85.900x012","C83.800","C91.007","C91.700","C85.900x041","C91.101","C80.905","C95.100","D48.722","Z51.800x096","C85.100x017","C77.302","C79.900","C96.402","D46.900x002","C91.800","C96.900","Z08.700","D47.200x005+G63.1*","C84.901","C91.002","C81.000","C92.101","C92.201","C45.900","C92.003","C95.000x003","C95.700x003","D36.700x021","C91.000x006","C92.900x011","C82.702","Z51.800x981","Z51.801","C88.000","C83.001","C93.300x001","C92.500x011","C96.500","C81.900x005","C83.505","C86.300","C85.900x023","C85.900x016","C82.900","C91.900","C79.829","C91.000x016","C92.700x012","C88.900x001","C93.901"};
            String[] dept_list={};
            if (!(true && mdc_zd.Contains(record.zdList[0]))){
                return "";
            }
            
            Base.groupMessages.putMessage(record.Index,"符合MDCR入组条件，匹配规则：主诊断匹配");
            String result;
    
            result=RA1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA3.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA4.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RB1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RB2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RC1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RC2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RD1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RE1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RG1.group(record);
            if (result.Length>0){
                return result;
            }
    
            if (false && record.ssList!=null && record.ssList.Length>0  && Base.intersect(Base.SS_VALID,record.ssList)){
                Base.groupMessages.putMessage(record.Index,"符合RQY入组条件，存在有效手术操作："+record.ssList.Intersect(Base.SS_VALID));
                return "RQY";
            }
    
            result=RR1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RS1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RS2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RT1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RT2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RU1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RW1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RW2.group(record);
            if (result.Length>0){
                return result;
            }
    
            Base.groupMessages.putMessage(record.Index,"不符合MDCR的ADRG入组条件");
            return "";
        }
    }
}
