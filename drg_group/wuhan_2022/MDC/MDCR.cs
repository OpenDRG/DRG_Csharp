namespace drg_group.wuhan_2022
{
    public class MDCR
    {
        public static String group(MedicalRecord record){
            String[] mdc_zd={"C96.403","C91.008","C80.900","C82.700","D46.700x006","Z08.200","C95.005","C96.705","C85.709","C95.000x116","D20.103","C97.x01","C86.400","C91.000","D36.706","C94.400","D36.704","C48.100","C90.000x021","C84.406","C85.900x029","D36.700x012","C90.000x005","C83.305","C80.902","D36.700x009","C91.400x004","C76.401","C92.006","C96.400x004","C95.700x002","C83.800x008","C80.004+G73.1*","Z85.801","Z51.002","D47.101","D48.716","C92.300x013","D47.100x009","C85.704","C84.407","C85.900x006","C91.100","D17.702","Z85.205","C92.004","D46.901","D36.700x021","C92.102","Z08.100","C95.900x005","C76.100x003","C77.800","C91.100x012","D47.200x005+G63.1*","C85.900x026","C86.601","C96.603","D48.720","Z85.500","Z08.700","Z85.201","C77.107","D48.722","C95.000x117","C79.800x818","C90.200x009","C94.000x001","C85.900x040","C84.000","C95.000x015","C90.000x039","Z08.800x003","Z85.803","C76.200","C92.502","C86.602","D18.106","D47.403","C91.401","D20.100","Z85.101","D19.900x001","D47.100x018","Z51.003","Z51.000x003","C92.200x001","R58.x00x007","C92.501","C92.300x001","C84.000x002","D48.718","C90.002","C90.300x004","C96.200x006","D48.700x019","C83.500","C96.200x005","C83.800","C95.700x003","D38.301","C83.003","C83.004","C93.002","C82.901","Z85.001","C83.900","D48.719","C92.700","C82.702","C90.000x008+M90.6*","C77.301","C95.004","C81.900x005","D47.200x004+G63.1*","Z85.809","C79.800x817","C85.715","D48.700x023","C96.700","C91.004","D47.200x003","C92.100x012","D09.900","Z08.900","C90.000x009","C95.000x118","D17.500","Z51.800x981","C88.403","C85.900x008","D47.100x008","C83.501","C46.100","C85.900x028","C96.900","D36.717","C94.300","C90.000x011","C90.303","D46.700x002","C84.400x001","C94.200x011","C92.100x001","Z08.800x001","Z51.001","C92.200x011","D36.714","C76.300x001","C86.500","C79.800x816","C79.900","C92.008","C92.100x018","C92.703","C95.000x003","Z51.103","C90.000x027","C79.800x804","D36.700x036","C79.800x834","C85.200","C78.600x004","C79.800x809","D20.101","Z09.200","Z85.002","Q85.801","D36.700x013","D09.700x001","C88.200","Z85.401","C88.400","D17.400x001","C90.300x003","Z51.804","Z92.600","C83.800x006","Z51.800x924","Z85.808","C78.601","C93.300x001","Z51.800x925","C92.100x019","C92.300","D19.100","C88.700x013","C95.006","C79.800x837","C91.700","C76.500","C91.500","C85.901","C81.100","C91.002","C92.400x011","C92.700x013","C88.000","D44.701","D44.703","D18.012","C95.000x016","C83.700","C95.901","C92.000x018","C90.200x013","C92.600","C46.900","Z51.800x951","C93.900","C79.807","D36.709","C85.900x027","C92.500x011","Z85.000x001","C85.900x041","D46.700","C85.100","C95.100x012","D48.714","C88.900x001","C88.700x012","C90.300","C85.900x024","C86.200","C92.002","C96.200","C76.100","C76.200x002","D48.713","C81.900","Z85.500x002","Z85.807","C93.901","C96.002","C96.201","Z08.800x002","C93.100","D36.700x032","C81.700","D36.712","Z85.503","C82.701","C96.602","D46.900x002","C83.504","C84.600","C85.900x016","D47.500","C96.800","D46.700x001","C88.300","Z85.600x001","C77.503","C83.301","C48.105","C84.500x004","C77.401","C85.100x021","Z85.006","C76.503","C94.700","Z85.404","C85.900x009","C80.904","C46.900x004","C85.100x010","C92.300x011","C84.000x003","D38.300x001","C81.701","C92.201","Z85.408","C96.501","C92.900x001","C94.202","C90.000x041","Z85.800x002","C95.900x013+M36.1*","C93.300","C78.604","C77.501","C85.900x020","C90.100x002","C96.401","C90.001","C95.900x015","C95.100","D36.700x030","Z85.700x001","C91.701","C92.601","C91.000x009","C86.100","C90.301","C79.826","C48.100x006","C82.000","C83.803","C86.300","C81.300","C76.300x009","C93.701","C83.702","C93.100x011","C97.x00","C88.200x012","C83.801","C77.400x001","C94.000x011","D48.717","D36.715","D48.725","C84.900","C96.600","C79.800x813","C92.000x017","C76.701","C90.000x004","C83.306","C92.403","D36.708","C82.704","D47.402","C83.303","C88.301","Z85.004","D47.701","Q85.806","C83.300","C83.802","C95.000x115","C46.700","D15.200x001","Z85.805","C92.800","C90.000x024","C90.000x026","D47.003","D47.001","C85.700","C76.801","C92.000x011","C93.104","D15.200x002","R58.x00x005","C77.900","C78.602","D47.703","Z51.800x983","C82.400","C90.000x022","C92.001","D47.900x001","C85.701","D47.702","C95.900","D36.700x038","C75.400","C84.500x012","C94.702","Z85.502","C91.000x007","C76.700x002","Z51.800x092","Z85.501","C92.000x014","Q85.900x015","Z85.800x005","C93.000x016","D38.300x002","C95.000x018","C92.701","C95.000","C77.302","C79.800x862","Z51.000x008","C88.402","D19.000","C79.900x001","C91.100x011","C91.007","C79.829","C92.300x003","Z86.002","C90.100x011","C82.100","C85.900x011","Z85.000x008","C46.800","C91.000x017","Z85.400x008","C85.900x043","C90.200x008","C91.000x016","C86.000","C92.402","C88.701","C77.900x001","C90.100","C95.900x003+M36.1*","C90.000x012","D17.701","C92.100x004","D36.700x029","C96.400x002","C92.200","D47.300","C45.700","C93.103","C85.700x016","C90.000","Z51.800x094","Z51.800x096","C91.000x013","C76.101","Z51.500x002","Z85.806","D48.301","C93.003","C92.007","C83.502","D15.701","Z85.009","C82.300","C92.100x016","D48.700x005","D36.700x035","C90.000x037","C96.000","C96.604","D36.713","C92.101","D47.400","C92.100x014","C85.900x002","C90.000x025","C95.003","C81.702","D47.900x002","Z85.100","Z85.800x011","C91.400","D44.700x002","C76.306","C85.900x015","D48.724","C83.100","C95.000x017","C84.601","C83.002","C92.000","C93.700","C92.706","C84.400","D47.100x007","Z85.008","Z51.104","C85.900x004","C85.900x012","D47.100x017","Z51.800x952","C85.900","D48.400x003","C85.900x014","C93.101","Z08.000","D47.700","C84.901","D36.700x024","C90.000x040","C90.000x034","C84.403","C94.700x004","Z85.406","Z85.204","C88.401","C77.202","C79.827","C94.600","C94.703","C48.201","Z51.809","C83.300x006","C92.100x002","C90.302","Z51.800x097","C96.500","C92.000x006","C85.900x030","C90.000x035","C85.900x031","C91.000x006","C90.000x031","C93.000x011","C88.202","C95.900x012","Z51.806","C76.300","C90.200","Z85.800x006","C76.502","C96.004","D47.100x004","C81.200","C45.706","C91.500x011","C91.400x013","Z51.800x921","C86.600","C83.102","D36.700x011","Z85.400x003","C91.800","C78.605","C90.000x030","D46.600","C84.402","D48.723","C82.500","D17.400","C91.006","C92.009","Z85.203","D15.200","C84.700","C85.900x036","C84.405","D46.700x003","D47.404","C77.206","C83.307","C94.200","C78.201","D15.700","D48.700x010","Z51.500x001","D48.700x004","C76.302","C45.700x002","D47.900","C85.900x037","Z85.300x001","C85.700x004","D36.716","D48.710","C94.001","C93.001","C76.400","D36.700x014","D36.700x023","C83.505","D20.000","C96.400x003","C95.002","C94.004","D46.900x006","C92.000x003","C77.200","C45.103","Z51.000x013","D48.700x015","C48.800","C90.000x032","C94.400x001","D47.700x007","C85.100x017","C85.705","C88.201","C96.200x013","Z85.800x003","D46.900","C85.900x019","C46.900x003","C92.900x011","D09.700x002","C92.000x012","C91.001","C92.103","C92.000x013","C85.900x034","Z51.200x008","D48.708","C94.700x014","C95.100x011","C96.502","C79.811","Z85.804","C83.101","C77.300x003","C88.203","C81.000","C84.401","C91.704","D36.710","C48.000x002","C83.300x008","C91.000x012","C85.900x010","C79.800x838","C93.100x012","C94.300x011","D47.401","Z51.802","C96.601","C79.809","C77.500","C88.900","C96.704","C96.202","C91.102","C77.502","Q85.802","C76.702","Z51.000x012","Z51.805","C92.700x006","D36.700x018","Z51.800x922","D36.718","C79.821","C91.900","C88.700","C83.703","Q85.909","C82.900","Z51.800x953","Z85.407","Z51.100x004","C88.302","C91.101","C92.100","C90.300x001","C85.900x022","C91.000x015","D48.100x008","C49.901","C82.600","D47.200","D48.700x001","D48.700x013","Q85.900x016","C90.300x002","C80.903","C92.900","C76.402","C82.903","C95.000x101","C81.400","D36.711","D44.601","C84.500","C48.104","C92.901","C94.201","Z51.808","C48.103","Z85.409","C91.000x014","D48.700x016","D15.900","C83.302","C85.900x005","C92.000x015","C45.100x005","C85.900x003","Z86.003","C90.000x014","D48.715","C85.900x042","C90.000x028","Z08.800x004","C77.300x001","D46.700x007","C85.900x001","C88.700x003","Z09.100","C86.603","C77.205","Z51.801","C96.801","D48.709","Z51.810","C85.900x017","C92.003","D36.700x008","C88.200x011","Z54.001","D47.004","D47.700x006","Z51.500x003","C90.000x023","C48.000","Z51.811","C92.000x016","D36.700x019","C91.003","C45.100","C91.901","C96.400","D48.401","C79.800x811","C92.100x017","C77.303","C80.901","C96.400x001","C91.600","Z85.810","C90.000x029","C85.900x025","C95.700x001","D45.x00","D47.002","C81.703","C95.700x011","C84.500x016","C77.300","C92.401","D36.705","Z85.403","C83.800x009","Z51.101","D20.000x002","D38.300x003","C83.000","Z85.900","Z51.800x927","C93.100x013","D47.100x019","D47.700x005","C90.000x033","D47.100","Z85.402","C76.305","C88.000x002","C88.000x012","C80.905","C83.300x009","D46.900x004","C92.100x011","C76.501","C92.005","Z86.001","D48.900","C85.707","C45.900","Z51.800x095","Z51.102","C90.000x036","C90.000x038","C91.300","D48.300x001","C83.503","D47.000","Z85.701","C48.200","C82.200","C83.001","C84.404","C84.100","D18.011","C84.800","C85.900x023","C93.102","Z85.802","C46.300","D48.400x002","C92.700x012","C76.304","C83.300x007","D18.105","C88.000x011","C95.000x002","D36.700x016","C46.900x002","D36.707","C95.000x102","D46.700x008","Z85.003","C85.900x013","C96.402","C82.703","C84.502","D48.707","C88.700x002","Z51.807","Z85.005","C83.304","Z85.007"};
            String[] dept_list={};
            if (!(true && mdc_zd.Contains(record.zdList[0]))){
                return "";
            }
            
            Base.groupMessages.putMessage(record.Index,"符合MDCR入组条件，匹配规则：主诊断匹配");
            String result;
    
            result=RA1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA3.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RA4.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RB1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RC1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RD1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RE1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RF1.group(record);
            if (result.Length>0){
                return result;
            }
    
            if (false && record.ssList!=null && record.ssList.Length>0  && Base.intersect(Base.SS_VALID,record.ssList)){
                Base.groupMessages.putMessage(record.Index,"符合RQY入组条件，存在有效手术操作："+record.ssList.Intersect(Base.SS_VALID));
                return "RQY";
            }
    
            result=RR1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RS1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RS2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RT1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RT2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RU1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RU2.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RV1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RW1.group(record);
            if (result.Length>0){
                return result;
            }
    
            result=RW2.group(record);
            if (result.Length>0){
                return result;
            }
    
            Base.groupMessages.putMessage(record.Index,"不符合MDCR的ADRG入组条件");
            return "";
        }
    }
}
